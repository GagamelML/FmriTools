function [wSurface, pSurface, faceData] = surf2mat(input_white, input_pial, pathFSURF, save_output)
% This function reads the white and pial surface generated by freesurfer
% and sorts vertices and faces into a mat file. This is done to have a data
% structure compatible with OpenFmriAnalysis. Both inputs are cells
% containing the filename of both hemispheres. It is assumed that the left
% hemisphere is the first entry.
% Inputs:
    % input_white: cell containing filenames of white surface.
    % input_pial: cell containing filenames of pial surface.
    % pathFSURF: path to freesurfer location.
    % save_output: filename of written mat file (optional).
% Outputs:
    % wSurface: vertices of white surface.
    % pSurface: vertices of pial surface.
    % faceData: corresponding faces.

% created by Daniel Haenelt
% Date created: 09-12-2019
% Last modified: 09-12-2019

% default input
if ~exist('save_output','var')  
    save_output = '';
end

% add freesurfer to path variable
addpath(genpath(pathFSURF));

% load surfaces
[vtx_lh_white, fac_lh_white] = read_surf(input_white{1});
[vtx_rh_white, fac_rh_white] = read_surf(input_white{2});
[vtx_lh_pial, ~] = read_surf(input_pial{1});
[vtx_rh_pial, ~] = read_surf(input_pial{2});

% sort data into cells
wSurface = cell(1,2);
wSurface{1} = vtx_lh_white;
wSurface{2} = vtx_rh_white;

pSurface = cell(1,2);
pSurface{1} = vtx_lh_pial;
pSurface{2} = vtx_rh_pial;

faceData = cell(1,2);
faceData{1} = fac_lh_white;
faceData{2} = fac_rh_white;

% write output
if ~isempty(save_output)
    save(save_output,'wSurface','pSurface','faceData');
end